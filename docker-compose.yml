services:
  nginx:
    container_name: 'openrdx-nginx-proxy'
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - oss_frontend
      - oss_backend
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - openrdx-network
    restart: unless-stopped

  core-radsec-proxy:
    container_name: 'openrdx-radsec-proxy'
    build:
      context: ./core
      dockerfile: Dockerfile
    ports:
      - "2083:2083/tcp"
    environment:
      - RADSEC_BIND_ADDR=0.0.0.0:2083
      - LOG_LEVEL=info
    depends_on:
      - core-auth
      - core-acct
    networks:
      - openrdx-network

  core-auth:
    container_name: 'openrdx-auth-core'
    build:
      context: ./core
      dockerfile: Dockerfile
    ports:
      - "1812:1812/udp"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres/postgres
      - MONGO_URL=mongodb://openrdx-mongo:27017
      - REDIS_URL=redis://openrdx-redis:6379/
      - RADIUS_BIND_ADDR=0.0.0.0:1812
      - SUBSCRIBER_CACHE_TTL=3600
      - LOG_LEVEL=info
      - SERVICE_TYPE=auth
    depends_on:
      - postgres
      - redis
    networks:
      - openrdx-network

  core-acct:
    container_name: 'openrdx-acct-core'
    build:
      context: ./core
      dockerfile: Dockerfile
    ports:
      - "1813:1813/udp"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres/postgres
      - MONGO_URL=mongodb://openrdx-mongo:27017
      - REDIS_URL=redis://openrdx-redis:6379/
      - RADIUS_BIND_ADDR=0.0.0.0:1813
      - QUOTA_CHECK_INTERVAL=60
      - LOG_LEVEL=info
      - SERVICE_TYPE=acct
    depends_on:
      - mongodb
      - redis
    networks:
      - openrdx-network

  oss_backend:
    container_name: 'openrdx-backend'
    hostname: 'openrdx-backend'
    build:
      context: ./oss_backend
      dockerfile: Dockerfile
    environment:
      # Django settings
      - DEBUG=False
      - SECRET_KEY=django-insecure-key-for-development-only
      - ALLOWED_HOSTS=localhost,127.0.0.1,*
      - LOGGING_LEVEL=INFO
      - DJANGO_SETTINGS_MODULE=core.settings
      
      # Database settings
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      
      # MongoDB settings
      - MONGODB_URI=mongodb://openrdx-mongodb:27017/radius_accounting
      
      # JWT settings
      - JWT_SECRET_KEY=jwt-secret-key-for-development-only
      - JWT_ACCESS_TOKEN_LIFETIME=60
      - JWT_REFRESH_TOKEN_LIFETIME=1
      
      # Email settings (Mailgun)
      - MAILGUN_API_KEY=
      - MAILGUN_SENDER_DOMAIN=mg.example.com
      - DEFAULT_FROM_EMAIL=noreply@example.com
      
      # Integrations
      - GOOGLE_CHAT_WEBHOOK_URL=
      
      # Redis settings
      - REDIS_URL=redis://openrdx-redis:6379/0

      # RADIUS settings
      - COA_TOPIC=radius_coa
    networks:
      - openrdx-network
    depends_on:
      - postgres
      - redis
      - mongodb
    restart: unless-stopped

  oss_frontend:
    container_name: 'openrdx-frontend'
    hostname: 'openrdx-frontend'
    build:
      context: ./oss_frontend
      dockerfile: Dockerfile
      args:
        - API_URL=${API_URL}
    environment:
      - API_URL=${API_URL}
    expose:
      - "80"
      - "443"
    networks:
      - openrdx-network
    depends_on:
      - oss_backend
    restart: unless-stopped

  postgres:
    container_name: 'openrdx-postgres'
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=openrdx
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"
    networks:
      - openrdx-network
    restart: unless-stopped

  mongodb:
    container_name: 'openrdx-mongo'
    hostname: 'openrdx-mongo'
    image: mongo:6.0
    environment:
      - MONGO_INITDB_DATABASE=radius_accounting
    volumes:
      - mongodb_data:/data/db
    expose:
      - "27017"
    networks:
      - openrdx-network
    restart: unless-stopped

  redis:
    container_name: 'openrdx-redis'
    hostname: 'openrdx-redis'
    image: redis:7-alpine
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    networks:
      - openrdx-network
    restart: unless-stopped

networks:
  openrdx-network:
    driver: bridge

volumes:
  postgres_data:
  mongodb_data:
  redis_data: 