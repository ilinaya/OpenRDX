# Generated by Django 5.2.1 on 2025-05-17 11:00

from django.db import migrations, models
import django.db.models.deletion


def create_default_secret(apps, schema_editor):
    """
    Create default secret and update NAS devices to use it.
    """
    # Get the models
    Secret = apps.get_model('radius', 'Secret')
    Nas = apps.get_model('nas', 'Nas')

    # Create default secret
    default_secret, created = Secret.objects.get_or_create(
        name="OpenRDX",
        defaults={
            'secret': "openrdx",
            'rad_sec': False,
            'description': "Default RADIUS secret",
            'source_subnets': ["0.0.0.0/0"],
        }
    )

    # We can't filter by secret field here because it doesn't exist yet in the Nas model
    # It will be added in nas/migrations/0003_add_secret_to_nas.py
    # The secret field will be set to the default secret in that migration


def reverse_default_secret(apps, schema_editor):
    """
    Reverse the creation of default secret.
    """
    # Get the models
    Secret = apps.get_model('radius', 'Secret')
    Nas = apps.get_model('nas', 'Nas')

    # We can't filter by secret field here because it doesn't exist yet in the Nas model
    # It will be added in nas/migrations/0003_add_secret_to_nas.py
    # The secret field will be set to None in that migration's reverse function

    # Delete the default secret
    Secret.objects.filter(name="OpenRDX").delete()


class Migration(migrations.Migration):

    dependencies = [
        ('radius', '0002_create_default_attribute_groups'),
        ('nas', '0002_create_default_nas_groups_and_vendors'),
    ]

    operations = [
        migrations.CreateModel(
            name='Secret',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Name')),
                ('secret', models.CharField(max_length=255, verbose_name='Secret')),
                ('rad_sec', models.BooleanField(default=False, help_text='Whether this secret is used for RADSEC', verbose_name='RADSEC')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('source_subnets', models.JSONField(blank=True, default=list, help_text='List of source subnets allowed to use this secret', verbose_name='Source Subnets')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Secret',
                'verbose_name_plural': 'Secrets',
                'ordering': ['name'],
                'db_table': 'radius_secret',
            },
        ),
        migrations.RunPython(
            create_default_secret,
            reverse_default_secret
        ),
    ]
